// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: copyfrom.go

package product

import (
	"context"
)

// iteratorForCreateProducts implements pgx.CopyFromSource.
type iteratorForCreateProducts struct {
	rows                 []CreateProductsParams
	skippedFirstNextCall bool
}

func (r *iteratorForCreateProducts) Next() bool {
	if len(r.rows) == 0 {
		return false
	}
	if !r.skippedFirstNextCall {
		r.skippedFirstNextCall = true
		return true
	}
	r.rows = r.rows[1:]
	return len(r.rows) > 0
}

func (r iteratorForCreateProducts) Values() ([]interface{}, error) {
	return []interface{}{
		r.rows[0].Sku,
		r.rows[0].Name,
		r.rows[0].Quantity,
		r.rows[0].Price,
	}, nil
}

func (r iteratorForCreateProducts) Err() error {
	return nil
}

func (q *Queries) CreateProducts(ctx context.Context, arg []CreateProductsParams) (int64, error) {
	return q.db.CopyFrom(ctx, []string{"products"}, []string{"sku", "name", "quantity", "price"}, &iteratorForCreateProducts{rows: arg})
}
