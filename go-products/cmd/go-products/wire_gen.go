// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/go-kratos/kratos/v2"
	"github.com/go-kratos/kratos/v2/log"
	"github.com/jackc/pgx/v5/pgxpool"
	product2 "go-products/internal/biz/product"
	"go-products/internal/conf"
	"go-products/internal/data/product"
	"go-products/internal/server"
	"go-products/internal/service"
	"go.opentelemetry.io/otel/trace"
)

import (
	_ "go.uber.org/automaxprocs"
)

// Injectors from wire.go:

// wireApp init kratos application.
func wireApp(bootstrap *conf.Bootstrap, conn *pgxpool.Conn, tracer trace.Tracer, logger log.Logger, queries *product.Queries) (*kratos.App, func(), error) {
	iProductUsecase := product2.NewProductUsecase(bootstrap, tracer, queries)
	productsService := service.NewProductsService(bootstrap, tracer, iProductUsecase)
	grpcServer := server.NewGRPCServer(bootstrap, productsService)
	httpServer := server.NewHTTPServer(bootstrap, productsService)
	app := newApp(logger, grpcServer, httpServer)
	return app, func() {
	}, nil
}
